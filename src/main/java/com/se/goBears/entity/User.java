package com.se.goBears.entity;

import lombok.Data;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Set;


import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

/**
 * This entity class defines the methods and variables for the entity Users. Users defines all the
 * description for the users of the system.
 */
@Data
@Entity
@Table(name = "users", uniqueConstraints = {@UniqueConstraint(columnNames = "username"), @UniqueConstraint(columnNames = "email")})
public class User implements Serializable {

    /**
     * This variable annotated with @ID and @GeneratedValue defines an autogenerated id for entity objects.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    private Long id;

    /**
     * This variable annotated with @NotBlank and @Size defines a username with a maximum size of 20.
     */
    @NotBlank
    @Size(max = 20)
    private String username;

    /**
     * This variable annotated with @NotBlank and @Size defines an email with a maximum size of 50.
     */
    @NotBlank
    @Size(max = 50)
    @Email
    private String email;

    /**
     * This variable annotated with @NotBlank and @Size defines a password with a maximum size of 120.
     */
    @NotBlank
    @Size(max = 120)
    private String password;

    /**
     * This variable annotated with @ManyToMany defines a ManyToMany relationship with Roles entity.
     */
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "user_roles", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))

    private Set<Role> roles;

    /**
     * This is a constructor for a user entity.
     */
    public User() {
    }

    /**
     * This constructor sets the value define to the user object.
     *
     * @param username is the username for the object.
     * @param email    is the email for the object.
     * @param password is the password for the object.
     */
    public User(String username, String email, String password) {
        this.username = username;
        this.email = email;
        this.password = password;
    }


}
